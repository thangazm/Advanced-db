------------- Start ------------------

CREATE TABLE Customers (

    customer_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    dob Date NOT NULL,
    address VARCHAR2(50) NOT NULL,
    mobile_number NUMBER NOT NULL,
    tel_number NUMBER NOT NULL,
    age NUMBER NOT NULL,
    
    CONSTRAINT customer_PK PRIMARY KEY(customer_id)
);

CREATE TABLE CustomerPaymentDetails (

    payment_detail_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    customer_id NUMBER NOT NULL,
    card_number NUMBER NOT NULL,
    card_type VARCHAR2(15) NOT NULL,
    card_network VARCHAR2(15) NOT NULL,
    card_issuer VARCHAR2(30) NOT NULL,
    card_name VARCHAR2(20) NOT NULL,
    card_holder_name VARCHAR2(50) NOT NULL,
    cvv NUMBER NOT NULL,
    
    CONSTRAINT PK_customer_payment_detail PRIMARY KEY(payment_detail_id),
    CONSTRAINT FK_payment_detail_customer FOREIGN KEY(customer_id) REFERENCES Customers(customer_id)
);

CREATE TABLE CustomerMembership (
    
    membership_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    customer_id Number NOT NULL,
    membership_type VARCHAR2(25) NOT NULL,
    membership_name VARCHAR2(25) NOT NULL,
    renew VARCHAR2(5) NOT NULL,
    membership_duration VARCHAR2(25) NOT NULL,
    start_date DATE,
    end_date DATE,
    
    CONSTRAINT PK_memebership PRIMARY KEY(membership_id),
    CONSTRAINT FK_membership_customer FOREIGN KEY(customer_id) REFERENCES Customers(customer_id)
);

CREATE TABLE CustomerPaymentRecords (
    
    record_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    payment_detail_id NUMBER NOT NULL,
    date_of_payment DATE NOT NULL,
    amount_payed FLOAT NOT NULL,
    status VARCHAR2(15) NOT NULL,
    
    CONSTRAINT PK_payment_record PRIMARY KEY(record_id),
    CONSTRAINT FK_payment_record_payment FOREIGN KEY(payment_detail_id) REFERENCES CustomerPaymentDetails(payment_detail_id)

);

CREATE TABLE Bookings (

    booking_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    customer_id NUMBER NOT NULL,
    record_id NUMBER NOT NULL,
    description VARCHAR2(100),
    booking_date DATE NOT NULL,
    payed VARCHAR2(5),
    status VARCHAR2(20) NOT NULL,

    CONSTRAINT PK_booking PRIMARY KEY(booking_id),
    CONSTRAINT FK_booking_customer FOREIGN KEY(customer_id) REFERENCES Customers(customer_id),
    CONSTRAINT FK_booking_payment FOREIGN KEY(record_id) REFERENCES CustomerPaymentRecords(record_id)
);

CREATE TABLE Venues (

    venue_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    venue_name VARCHAR2(100) NOT NULL,
    city VARCHAR2(100) NOT NULL,
    country VARCHAR2(100) NOT NULL,
    address VARCHAR2(200) NOT NULL,

    CONSTRAINT PK_venue PRIMARY KEY(venue_id)

);

CREATE TABLE Events (
    
    event_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    venue_id NUMBER NOT NULL,
    event_name VARCHAR2(100) NOT NULL,
    description VARCHAR2(200),
    minimum_age NUMBER NOT NULL,
    event_date DATE NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    tickets_available NUMBER NOT NULL,
    tickets_sold NUMBER NOT NULL,
    total_tickets NUMBER NOT NULL,
        
    CONSTRAINT PK_event PRIMARY KEY(event_id),
    CONSTRAINT FK_event_venue FOREIGN KEY(venue_id) REFERENCES Venues(venue_id)
);

CREATE TABLE TicketReservations (

    ticket_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    booking_id NUMBER NOT NULL,
    event_id NUMBER NOT NULL,
    issued_date TIMESTAMP NOT NULL,
    ticket_price FLOAT NOT NULL,
    total_tickets NUMBER NOT NULL,
    total_amount FLOAT NOT NULL,

    CONSTRAINT PK_ticket PRIMARY KEY(ticket_id),
    CONSTRAINT FK_ticket_booking FOREIGN KEY(booking_id) REFERENCES bookings(booking_id),
    CONSTRAINT FK_ticket_event FOREIGN KEY(event_id) REFERENCES events(event_id)
);

CREATE TABLE Employees(

    employee_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    venue_id NUMBER NOT NULL,
    employee_name VARCHAR2(100) NOT NULL,
    join_date DATE NOT NULL,
    Designation VARCHAR2(100) NOT NULL,
    id_number NUMBER NOT NULL,
    dob DATE NOT NULL,
    employee_number NUMBER NOT NULL,
    address VARCHAR2(100) NOT NULL,
    Salary FLOAT NOT NULL,

    CONSTRAINT PK_employee PRIMARY KEY(employee_id),
    CONSTRAINT FK_employee_venue FOREIGN KEY(venue_id) REFERENCES Venues(venue_id)

);

CREATE TABLE Artists (

    artist_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    artist_name VARCHAR2(100) NOT NULL,
    dob DATE NOT NULL,
    registered_number NUMBER NOT NULL,
    contact_number NUMBER NOT NULL,
    senior VARCHAR2(5) NOT NULL,
    genre VARCHAR2(100) NOT NULL,

    CONSTRAINT PK_artist PRIMARY KEY(artist_id)

);

CREATE TABLE EmployeeAssignment (

    assignment_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    employee_id NUMBER NOT NULL,
    artist_id NUMBER  NULL,
    ticket_id NUMBER  NULL,
    assigned_date DATE NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    assignee_type VARCHAR2(50) NOT NULL,
    status VARCHAR2(50) NOT NULL,

    CONSTRAINT PK_assignment PRIMARY KEY(assignment_id),
    CONSTRAINT FK_assignment_employee FOREIGN KEY(employee_id) REFERENCES Employees(employee_id),
    CONSTRAINT FK_assignment_artist FOREIGN KEY(artist_id) REFERENCES Artists(artist_id),
    CONSTRAINT FK_assignment_ticket FOREIGN KEY(ticket_id) REFERENCES TicketReservations(ticket_id)
    
);

CREATE TABLE MusicBands (

    band_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    registered_date DATE NOT NULL,
    band_name VARCHAR2(100) NOT NULL,
    genre VARCHAR2(50) NOT NULL,
    members_total NUMBER NOT NULL,

    CONSTRAINT PK_music_band PRIMARY KEY(band_id)

);

CREATE TABLE BandArtists (

    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    band_id NUMBER NOT NULL,
    artist_id NUMBER NOT NULL,

    CONSTRAINT PK_band_artist PRIMARY KEY(id),
    CONSTRAINT FK_band_artist_band FOREIGN KEY(band_id) REFERENCES MusicBands(band_id),
    CONSTRAINT FK_band_artist_artist FOREIGN KEY(artist_id) REFERENCES Artists(artist_id)

);

CREATE TABLE PerformersPayments (

    payment_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    band_id NUMBER NOT NULL,
    artist_id NUMBER NOT NULL,
    payment_date DATE NOT NULL,
    description VARCHAR2(200)  NULL,
    payment_type VARCHAR2(100) NOT NULL,
    issued_date DATE NOT NULL,
    status VARCHAR2(50) NOT NULL,
    is_band VARCHAR2(5) NOT NULL,
    amount_payed FLOAT NOT NULL,

    CONSTRAINT PK_performers_payment PRIMARY KEY(payment_id),
    CONSTRAINT FK_payment_band FOREIGN KEY(band_id) REFERENCES MusicBands(band_id),
    CONSTRAINT FK_performers_payment_artist FOREIGN KEY(artist_id) REFERENCES Artists(artist_id)
    
);

CREATE TABLE Meals (

    meal_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    meal_name VARCHAR2(100) NOT NULL,
    escription VARCHAR2(200)  NULL,
    meal_type VARCHAR2(100) NOT NULL, 
    availability VARCHAR2(5) NOT NULL,

    CONSTRAINT PK_meal PRIMARY KEY(meal_id)

);

CREATE TABLE MealReservation (

    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    meal_id NUMBER NOT NULL,
    ticket_id NUMBER NOT NULL,

    CONSTRAINT PK_meal_reservation PRIMARY KEY(id),
    CONSTRAINT FK_meal_reservation_meal FOREIGN KEY(meal_id) REFERENCES Meals(meal_id),
    CONSTRAINT FK_meal_reservation_ticket FOREIGN KEY(ticket_id) REFERENCES TicketReservations(ticket_id)
    
);

-- DROP TABLES

DROP TABLE CustomerMembership FORCE;

DROP TABLE EmployeeAssignment FORCE;

DROP TABLE MealReservation FORCE;

DROP TABLE TicketReservations FORCE;

DROP TABLE Bookings FORCE;

DROP TABLE CustomerPaymentRecords FORCE;

DROP TABLE CustomerPaymentDetails FORCE;

DROP TABLE BandArtists FORCE;

DROP TABLE PerformersPayments FORCE;

DROP TABLE Events FORCE;

DROP TABLE Artists FORCE;

DROP TABLE Employees FORCE;

DROP TABLE Meals FORCE;

DROP TABLE MusicBands FORCE;

DROP TABLE Venues FORCE;

DROP TABLE Customers FORCE;

SELECT * FROM MealReservation;